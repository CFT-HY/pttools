#!/usr/bin/env bash
#SBATCH --job-name=pttools-tests-conda
#SBATCH --partition=test
#SBATCH --time=00:10:00
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=4
#SBATCH --mem-per-cpu=1G
#SBATCH --output=pttools-tests-conda.out
set -e

echo "Running on $(hostname --fqdn)"

# Slurm scripts are placed in a special directory when executed, so this doesn't work
# SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
# PTTOOLS_DIR="${SCRIPT_DIR}/.."

PTTOOLS_DIR="$(realpath "..")"
cd "${PTTOOLS_DIR}"

if command -v "module" &> /dev/null; then
  if [[ "$(hostname --fqdn)" == *grid.helsinki.fi ]]; then
    # For the Kale cluster of the University of Helsinki
    # https://wiki.helsinki.fi/display/it4sci/Kale+User+Guide
    module load Anaconda3/2020.02
  else
    # For CSC clusters
    # module load fgci-common
    module load anaconda
  fi
else
  echo "Warning! Module management system was not found."
fi

# Enabling conda for use in scripts
eval "$(conda shell.bash hook)"

# Conda environment setup
if [ ! -d "${PTTOOLS_DIR}/envs" ]; then
  # NOTE! By default Conda may download packages to ~/.conda, which may not have enough disk quota.
  # To change this behaviour, create a .condarc config file.
  # https://conda.io/projects/conda/en/latest/user-guide/configuration/use-condarc.html#
  conda env create --prefix "${PTTOOLS_DIR}/envs" --file environment.yml
else
  conda env update --prefix "${PTTOOLS_DIR}/envs" --file environment.yml
fi
conda activate "${PTTOOLS_DIR}/envs"
pip install -r "${PTTOOLS_DIR}/requirements-dev.txt"

numba --sysinfo

# You can replace this with your own workload
if command -v "srun" &> /dev/null; then
  srun pytest
else
  echo "Warning! Slurm was not found. Running directly."
  pytest
fi
